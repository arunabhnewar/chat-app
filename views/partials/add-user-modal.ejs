<div class="modal-wrapper" id="add-user-modal">
    <div class="modal">
        <a href="#" onclick="closeModal()" class="modal-close">+</a>
        <div class="modal-title">
            <h2>Create New User</h2>
        </div>
        <div class="modal-body">
            <form id="add-user-form" method="post" action="/users" enctype="multipart/form-data">

                <input type="text" placeholder="enter name" name="name" />
                <p class="error name-error"></p>
                <!-- <p class="error "></p> -->

                <input type="text" placeholder="enter email" name="email" />
                <p class="error email-error"></p>
                <!-- <p class="error "></p> -->

                <input type="text" placeholder="enter mobile" name="mobile" />
                <p class="error mobile-error"></p>
                <!-- <p class="error "></p> -->

                <input type="password" placeholder="enter password" name="password" />
                <p class="error password-error"></p>
                <!-- <p class="error "></p> -->

                <input type="file" name="avatar" />
                <p class="error avatar-error"></p>
                <!-- <p class="error "></p> -->

                <p class="error common-error"></p>

                <input type="submit" value="Submit" />
            </form>
        </div>
    </div>
</div>
<script>
    const modal = document.querySelector("#add-user-modal");
    const form = document.querySelector("#add-user-form");


    // success toast
    const successToast = Toastify({
        text: "User was added successfully! Reloading the list...",
        duration: 2000,
    })


    function closeModal() {
        modal.style.display = "none";
    }
    function openModal() {
        modal.style.display = "block";
    }


    // form submit handler
    form.addEventListener("submit", async function (e) {
        console.log(e);
        e.preventDefault();

        // clear errors first
        const errorPlaceholders = document.querySelectorAll("p.error");
        for (let i = 0; i < errorPlaceholders.length; i++) {
            errorPlaceholders[i].style.display = "none";
        }

        // clear input box
        const inputErrors = document.querySelectorAll("input.error");
        if (inputErrors.length > 0) {
            for (let x = 0; x < inputErrors.length; x++) {
                inputErrors[x].classList.remove("error");
            }
        }

        // prepare the form data
        const formData = new FormData(form);

        // send the request to server
        let response = await fetch("/users", {
            method: "POST",
            body: formData,
        });

        // get response
        let result = await response.json();

        // handle error and response
        if (result.errors) {
            // errors
            Object.keys(result.errors).forEach((fieldName) => {
                // add error class to all inputs
                form[fieldName].classList.add('error');

                // set all error placeholders (p tag) textContent
                const errorPlaceholder = document.querySelector(`.${fieldName}-error`);
                errorPlaceholder.textContent = result.errors[fieldName].msg;

                // make all placeholders visible
                errorPlaceholder.style.display = "block";
            });
        } else {
            // success
            successToast.showToast();
            closeModal();
            document.querySelector("p.error").style.display = "none";

            // reload the page after 2 second
            setTimeout(() => {
                location.reload();
            }, 2000);
        }
    })
</script>